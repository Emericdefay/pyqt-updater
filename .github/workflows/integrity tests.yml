name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r wrkflw_reqs.txt

    - name: LS
      run: ls
    - name: Test with unittest
      run: |
        python -m unittest ./app/launcher.py
    - name: LS
      run: ls

    - name: PyInstaller
      run: |
        pip install pyinstaller
        pyinstaller --name app --onefile launcher.py

    - name: Increment version
      run: |
        # Vérifier si une mise à jour est disponible
        VERSION_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${GITHUB_BASE_REF}/version.txt"
        VERSION=$(curl -s "${VERSION_URL}")
        echo $VERSION
        # Chaîne de caractères initiale
        VERSION="1.2.3"

        # Récupérer la dernière partie de la chaîne (séparée par un point)
        LAST_PART=$(echo $VERSION | awk -F. '{print $NF}')

        # Incrémenter la dernière partie de 1
        NEW_LAST_PART=$(($LAST_PART + 1))

        # Remplacer la dernière partie de la chaîne par la nouvelle valeur incrémentée
        NEW_VERSION=$(echo $VERSION | sed "s/\.[0-9]*$/.${NEW_LAST_PART}/")

        echo "Version initiale : $VERSION"
        echo "Nouvelle version : $NEW_VERSION"

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.0.${{ github.ref }}
        release_name: Release v1.0.${{ github.ref }}
        body: |
          Changes in this Release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

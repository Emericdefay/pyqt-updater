name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      VERSION: "1.0.0"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r wrkflw_reqs.txt

    - name: Test with unittest
      run: |
        python -m unittest ./app/launcher.py

    - name: PyInstaller
      run: |
        pip install pyinstaller
        pyinstaller --name app --onefile launcher.py

    - name: Increment version
      id: version-got-from-text
      run: |
        # Vérifier si une mise à jour est disponible
        echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-got-from-text.outputs.VERSION }}
        release_name: Release ${{ steps.version-got-from-text.outputs.VERSION }}
        body: |
          Changes in this Release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    - name: ls
      run: ls

    - name: Upload asset
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./dist/app
        asset_name: app.exe
        asset_content_type: application/octet-stream
